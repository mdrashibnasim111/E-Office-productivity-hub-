{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user within the e-Office Productivity Hub application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "employeeId": {
          "type": "string",
          "description": "The employee's identification number."
        },
        "fullName": {
          "type": "string",
          "description": "The user's full name."
        },
        "designation": {
          "type": "string",
          "description": "The user's job title or position."
        },
        "contactEmail": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "contactPhone": {
          "type": "string",
          "description": "The user's phone number."
        },
        "roleId": {
          "type": "string",
          "description": "Reference to Role. (Relationship: Role 1:N User)"
        },
        "departmentId": {
          "type": "string",
          "description": "Reference to Department. (Relationship: Department 1:N User)"
        }
      },
      "required": [
        "id",
        "employeeId",
        "fullName",
        "designation",
        "contactEmail",
        "contactPhone",
        "roleId",
        "departmentId"
      ]
    },
    "Role": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Role",
      "type": "object",
      "description": "Represents the role of a user within the application (e.g., Admin, Manager, Employee).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the role entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the role (e.g., Admin, Manager, Employee)."
        },
        "description": {
          "type": "string",
          "description": "A description of the role and its permissions."
        }
      },
      "required": [
        "id",
        "name",
        "description"
      ]
    },
    "Department": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Department",
      "type": "object",
      "description": "Represents a department within the government office.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the department entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the department (e.g., Finance, HR, IT)."
        },
        "description": {
          "type": "string",
          "description": "A description of the department and its functions."
        }
      },
      "required": [
        "id",
        "name",
        "description"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Includes denormalized 'roleId' and 'departmentId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, matching the Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/roles/{roleId}",
        "definition": {
          "entityName": "Role",
          "schema": {
            "$ref": "#/backend/entities/Role"
          },
          "description": "Stores role definitions (e.g., Admin, Manager, Employee).",
          "params": [
            {
              "name": "roleId",
              "description": "The unique identifier for the role."
            }
          ]
        }
      },
      {
        "path": "/departments/{departmentId}",
        "definition": {
          "entityName": "Department",
          "schema": {
            "$ref": "#/backend/entities/Department"
          },
          "description": "Stores department information (e.g., Finance, HR, IT).",
          "params": [
            {
              "name": "departmentId",
              "description": "The unique identifier for the department."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support role-based access control and efficient data retrieval for the e-Office Productivity Hub. It leverages structural segregation to isolate user data and role/department assignments, and denormalization to ensure authorization independence. Path-based ownership is used for user-specific data, simplifying security rules. A roles collection stores roles, a departments collection stores department data, and a users collection stores user profiles with references to their role and department. This design facilitates secure and scalable data management while adhering to the core design principles and strategy mandates.\n\nAuthorization Independence is achieved by storing the roleId and departmentId directly within the user document. This eliminates the need for `get()` calls in security rules to determine a user's role or department, enabling atomic operations. The structure also supports QAPs by segregating user data into its own collection and using role and department collections, allowing for efficient list operations with appropriate security constraints. The roleId and departmentId can be used to determine which documents a user has access to without having to filter on the data itself. By using path-based ownership for user-owned data (/users/{userId}), we ensure that listing operations are secure, as rules can efficiently check if request.auth.uid matches the userId."
  }
}