/**
 * @fileoverview Firestore Security Rules for e-Office Productivity Hub.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model for user profiles and engagement streaks.
 * Performance reviews are accessible based on the reviewer and reivee roles.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information, only accessible by the user themselves.
 * - /userStreaks/{userId}: Tracks user engagement, only accessible by the user themselves.
 * - /performanceReviews/{reviewId}: Stores performance reviews, accessible based on the reviewer and reivee roles.
 *
 * Key Security Decisions:
 * - Users can only read and write their own user profile and engagement streak data.
 * - Users can only create performance reviews about themselves or reviews created by them.
 * - Listing of users or performance reviews is not allowed.
 *
 * Denormalization for Authorization:
 *  - The `userId` is part of the document id in both `/users/{userId}` and `/userStreaks/{userId}` to avoid additional reads.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile information.
     * @path /users/{userId}
     * @allow (get) Signed-in user can read their own profile.
     * @allow (create) Signed-in user can create their profile if the userId matches their auth UID.
     * @allow (update) Signed-in user can update their own profile.
     * @allow (delete) Signed-in user can delete their own profile.
     * @deny (get) Signed-in user cannot read another user's profile.
     * @deny (create) Signed-in user cannot create a profile with a userId that does not match their auth UID.
     * @deny (update) Signed-in user cannot update another user's profile.
     * @deny (delete) Signed-in user cannot delete another user's profile.
     * @principle Enforces document ownership for user profiles.
     */
    match /users/{userId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.id == request.auth.uid;
      allow update: if isSignedIn() && isOwner(userId) && resource.data.id == request.auth.uid;
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    /**
     * @description Controls access to user engagement streak data.
     * @path /userStreaks/{userId}
     * @allow (get) Signed-in user can read their own streak data.
     * @allow (create) Signed-in user can create their streak data if the userId matches their auth UID.
     * @allow (update) Signed-in user can update their own streak data.
     * @allow (delete) Signed-in user can delete their own streak data.
     * @deny (get) Signed-in user cannot read another user's streak data.
     * @deny (create) Signed-in user cannot create streak data with a userId that does not match their auth UID.
     * @deny (update) Signed-in user cannot update another user's streak data.
     * @deny (delete) Signed-in user cannot delete another user's streak data.
     * @principle Enforces document ownership for engagement streaks.
     */
    match /userStreaks/{userId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.id == request.auth.uid;
      allow update: if isSignedIn() && isOwner(userId) && resource.data.id == request.auth.uid;
      allow delete: if isSignedIn() && isExistingOwner(userId);
    }

    /**
     * @description Controls access to performance review documents.
     * @path /performanceReviews/{reviewId}
     * @allow (create) Signed-in user can create a review for themselves or a review created by them.
     * @deny (create) Signed-in user cannot create a review for another user without being a manager.
     * @allow (get) Any signed-in user can get a review if the review's `userId` or `reviewerId` matches their own `uid`.
     * @deny (get) A signed-in user cannot get a review about another user.
     * @allow (update) Signed-in user can update a review created by them.
     * @deny (update) Signed-in user cannot update a review that they did not create.
     * @allow (delete) Signed-in user can delete a review created by them.
     * @deny (delete) Signed-in user cannot delete a review that they did not create.
     * @principle Enforces document ownership and role-based access for performance reviews.
     */
    match /performanceReviews/{reviewId} {
      allow get: if isSignedIn() && (resource.data.userId == request.auth.uid || resource.data.reviewerId == request.auth.uid);
      allow list: if false;
      allow create: if isSignedIn() && (request.resource.data.userId == request.auth.uid || request.resource.data.reviewerId == request.auth.uid);
      allow update: if isSignedIn() && resource.data.reviewerId == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.reviewerId == request.auth.uid && resource != null;
    }
  }

  // Helper functions
  function isSignedIn() {
    return request.auth != null;
  }

  function isOwner(userId) {
    return request.auth.uid == userId;
  }

  function isExistingOwner(userId) {
    return isOwner(userId) && resource != null;
  }
}